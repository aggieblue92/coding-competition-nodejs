node_modules/eyes/lib/eyes.js:72:    return options.stream.write.call(options.stream, (label ?
node_modules/mysql/lib/Connection.js:79:       connection._socket.write(data);
node_modules/mysql/lib/Connection.js:82:      connection._protocol.write(data);
node_modules/mysql/lib/Connection.js:276:      secureSocket.write(data);
node_modules/mysql/lib/Connection.js:311:      securePair.encrypted.write(data);
node_modules/mysql/lib/Connection.js:317:      securePair.cleartext.write(data);
node_modules/mysql/lib/protocol/PacketWriter.js:29:    this.writeUnsignedNumber(3, packetLength);
node_modules/mysql/lib/protocol/PacketWriter.js:30:    this.writeUnsignedNumber(1, packetNumber);
node_modules/mysql/lib/protocol/PacketWriter.js:35:    this.writeBuffer(buffer.slice(start, end));
node_modules/mysql/lib/protocol/PacketWriter.js:41:PacketWriter.prototype.writeUnsignedNumber = function(bytes, value) {
node_modules/mysql/lib/protocol/PacketWriter.js:49:PacketWriter.prototype.writeFiller = function(bytes) {
node_modules/mysql/lib/protocol/PacketWriter.js:57:PacketWriter.prototype.writeNullTerminatedString = function(value, encoding) {
node_modules/mysql/lib/protocol/PacketWriter.js:65:  this._buffer.write(value, this._offset, encoding);
node_modules/mysql/lib/protocol/PacketWriter.js:71:PacketWriter.prototype.writeString = function(value) {
node_modules/mysql/lib/protocol/PacketWriter.js:79:  this._buffer.write(value, this._offset, 'utf-8');
node_modules/mysql/lib/protocol/PacketWriter.js:84:PacketWriter.prototype.writeBuffer = function(value) {
node_modules/mysql/lib/protocol/PacketWriter.js:92:PacketWriter.prototype.writeLengthCodedNumber = function(value) {
node_modules/mysql/lib/protocol/PacketWriter.js:149:PacketWriter.prototype.writeLengthCodedBuffer = function(value) {
node_modules/mysql/lib/protocol/PacketWriter.js:151:  this.writeLengthCodedNumber(bytes);
node_modules/mysql/lib/protocol/PacketWriter.js:152:  this.writeBuffer(value);
node_modules/mysql/lib/protocol/PacketWriter.js:155:PacketWriter.prototype.writeNullTerminatedBuffer = function(value) {
node_modules/mysql/lib/protocol/PacketWriter.js:156:  this.writeBuffer(value);
node_modules/mysql/lib/protocol/PacketWriter.js:157:  this.writeFiller(1); // 0x00 terminator
node_modules/mysql/lib/protocol/PacketWriter.js:160:PacketWriter.prototype.writeLengthCodedString = function(value) {
node_modules/mysql/lib/protocol/PacketWriter.js:162:    this.writeLengthCodedNumber(null);
node_modules/mysql/lib/protocol/PacketWriter.js:171:  this.writeLengthCodedNumber(bytes);
node_modules/mysql/lib/protocol/PacketWriter.js:178:  this._buffer.write(value, this._offset, 'utf-8');
node_modules/mysql/lib/protocol/Protocol.js:38:Protocol.prototype.write = function(buffer) {
node_modules/mysql/lib/protocol/Protocol.js:39:  this._parser.write(buffer);
node_modules/mysql/lib/protocol/Protocol.js:284:  packet.write(packetWriter);
node_modules/mysql/lib/protocol/Parser.js:24:Parser.prototype.write = function(buffer) {
node_modules/mysql/lib/protocol/Parser.js:95:        process.nextTick(this.write.bind(this));
node_modules/mysql/lib/protocol/Parser.js:142:  process.nextTick(this.write.bind(this));
node_modules/mysql/lib/protocol/packets/ComPingPacket.js:6:ComPingPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/ComPingPacket.js:7:  writer.writeUnsignedNumber(1, this.command);
node_modules/mysql/lib/protocol/packets/ResultSetHeaderPacket.js:19:ResultSetHeaderPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/ResultSetHeaderPacket.js:20:  writer.writeLengthCodedNumber(this.fieldCount);
node_modules/mysql/lib/protocol/packets/ResultSetHeaderPacket.js:23:    writer.writeLengthCodedNumber(this.extra);
node_modules/mysql/lib/protocol/packets/OldPasswordPacket.js:12:OldPasswordPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/OldPasswordPacket.js:13:  writer.writeBuffer(this.scrambleBuff);
node_modules/mysql/lib/protocol/packets/OldPasswordPacket.js:14:  writer.writeFiller(1);
node_modules/mysql/lib/protocol/packets/StatisticsPacket.js:18:StatisticsPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/StatisticsPacket.js:19:  writer.writeString(this.message);
node_modules/mysql/lib/protocol/packets/ErrorPacket.js:25:ErrorPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/ErrorPacket.js:26:  writer.writeUnsignedNumber(1, 0xff);
node_modules/mysql/lib/protocol/packets/ErrorPacket.js:27:  writer.writeUnsignedNumber(2, this.errno);
node_modules/mysql/lib/protocol/packets/ErrorPacket.js:30:    writer.writeString(this.sqlStateMarker);
node_modules/mysql/lib/protocol/packets/ErrorPacket.js:31:    writer.writeString(this.sqlState);
node_modules/mysql/lib/protocol/packets/ErrorPacket.js:34:  writer.writeString(this.message);
node_modules/mysql/lib/protocol/packets/SSLRequestPacket.js:22:SSLRequestPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/SSLRequestPacket.js:23:  writer.writeUnsignedNumber(4, this.clientFlags);
node_modules/mysql/lib/protocol/packets/SSLRequestPacket.js:24:  writer.writeUnsignedNumber(4, this.maxPacketSize);
node_modules/mysql/lib/protocol/packets/SSLRequestPacket.js:25:  writer.writeUnsignedNumber(1, this.charsetNumber);
node_modules/mysql/lib/protocol/packets/SSLRequestPacket.js:26:  writer.writeFiller(23);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:33:ClientAuthenticationPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:35:    writer.writeUnsignedNumber(4, this.clientFlags);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:36:    writer.writeUnsignedNumber(4, this.maxPacketSize);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:37:    writer.writeUnsignedNumber(1, this.charsetNumber);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:38:    writer.writeFiller(23);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:39:    writer.writeNullTerminatedString(this.user);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:40:    writer.writeLengthCodedBuffer(this.scrambleBuff);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:41:    writer.writeNullTerminatedString(this.database);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:43:    writer.writeUnsignedNumber(2, this.clientFlags);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:44:    writer.writeUnsignedNumber(3, this.maxPacketSize);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:45:    writer.writeNullTerminatedString(this.user);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:46:    writer.writeBuffer(this.scrambleBuff);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:48:      writer.writeFiller(1);
node_modules/mysql/lib/protocol/packets/ClientAuthenticationPacket.js:49:      writer.writeBuffer(new Buffer(this.database));
node_modules/mysql/lib/protocol/packets/OkPacket.js:32:OkPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/OkPacket.js:33:  writer.writeUnsignedNumber(1, 0x00);
node_modules/mysql/lib/protocol/packets/OkPacket.js:34:  writer.writeLengthCodedNumber(this.affectedRows || 0);
node_modules/mysql/lib/protocol/packets/OkPacket.js:35:  writer.writeLengthCodedNumber(this.insertId || 0);
node_modules/mysql/lib/protocol/packets/OkPacket.js:37:    writer.writeUnsignedNumber(2, this.serverStatus || 0);
node_modules/mysql/lib/protocol/packets/OkPacket.js:38:    writer.writeUnsignedNumber(2, this.warningCount || 0);
node_modules/mysql/lib/protocol/packets/OkPacket.js:40:  writer.writeString(this.message);
node_modules/mysql/lib/protocol/packets/LocalDataFilePacket.js:9:LocalDataFilePacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/LocalDataFilePacket.js:10:  writer.writeBuffer(this.data);
node_modules/mysql/lib/protocol/packets/EmptyPacket.js:5:EmptyPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/ComStatisticsPacket.js:6:ComStatisticsPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/ComStatisticsPacket.js:7:  writer.writeUnsignedNumber(1, this.command);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:69:HandshakeInitializationPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:70:  writer.writeUnsignedNumber(1, this.protocolVersion);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:71:  writer.writeNullTerminatedString(this.serverVersion);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:72:  writer.writeUnsignedNumber(4, this.threadId);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:73:  writer.writeBuffer(this.scrambleBuff1);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:74:  writer.writeFiller(1);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:75:  writer.writeUnsignedNumber(2, this.serverCapabilities1);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:76:  writer.writeUnsignedNumber(1, this.serverLanguage);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:77:  writer.writeUnsignedNumber(2, this.serverStatus);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:79:    writer.writeUnsignedNumber(2, this.serverCapabilities2);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:80:    writer.writeUnsignedNumber(1, this.scrambleLength);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:81:    writer.writeFiller(10);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:83:  writer.writeNullTerminatedBuffer(this.scrambleBuff2);
node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js:86:    writer.writeNullTerminatedString(this.pluginData);
node_modules/mysql/lib/protocol/packets/EofPacket.js:19:EofPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/EofPacket.js:20:  writer.writeUnsignedNumber(1, 0xfe);
node_modules/mysql/lib/protocol/packets/EofPacket.js:22:    writer.writeUnsignedNumber(2, this.warningCount);
node_modules/mysql/lib/protocol/packets/EofPacket.js:23:    writer.writeUnsignedNumber(2, this.serverStatus);
node_modules/mysql/lib/protocol/packets/UseOldPasswordPacket.js:12:UseOldPasswordPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/UseOldPasswordPacket.js:13:  writer.writeUnsignedNumber(1, this.firstByte);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:65:FieldPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/FieldPacket.js:67:    writer.writeLengthCodedString(this.catalog);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:68:    writer.writeLengthCodedString(this.db);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:69:    writer.writeLengthCodedString(this.table);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:70:    writer.writeLengthCodedString(this.orgTable);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:71:    writer.writeLengthCodedString(this.name);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:72:    writer.writeLengthCodedString(this.orgName);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:74:    writer.writeLengthCodedNumber(0x0c);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:75:    writer.writeUnsignedNumber(2, this.charsetNr || 0);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:76:    writer.writeUnsignedNumber(4, this.length || 0);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:77:    writer.writeUnsignedNumber(1, this.type || 0);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:78:    writer.writeUnsignedNumber(2, this.flags || 0);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:79:    writer.writeUnsignedNumber(1, this.decimals || 0);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:80:    writer.writeFiller(2);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:83:      writer.writeLengthCodedString(this.default);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:86:    writer.writeLengthCodedString(this.table);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:87:    writer.writeLengthCodedString(this.name);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:88:    writer.writeUnsignedNumber(1, 0x01);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:89:    writer.writeUnsignedNumber(1, this.length);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:90:    writer.writeUnsignedNumber(1, 0x01);
node_modules/mysql/lib/protocol/packets/FieldPacket.js:91:    writer.writeUnsignedNumber(1, this.type);
node_modules/mysql/lib/protocol/packets/ComQuitPacket.js:10:ComQuitPacket.prototype.write = function write(writer) {
node_modules/mysql/lib/protocol/packets/ComQuitPacket.js:11:  writer.writeUnsignedNumber(1, this.command);
node_modules/mysql/lib/protocol/packets/ComChangeUserPacket.js:20:ComChangeUserPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/ComChangeUserPacket.js:21:  writer.writeUnsignedNumber(1, this.command);
node_modules/mysql/lib/protocol/packets/ComChangeUserPacket.js:22:  writer.writeNullTerminatedString(this.user);
node_modules/mysql/lib/protocol/packets/ComChangeUserPacket.js:23:  writer.writeLengthCodedBuffer(this.scrambleBuff);
node_modules/mysql/lib/protocol/packets/ComChangeUserPacket.js:24:  writer.writeNullTerminatedString(this.database);
node_modules/mysql/lib/protocol/packets/ComChangeUserPacket.js:25:  writer.writeUnsignedNumber(2, this.charsetNumber);
node_modules/mysql/lib/protocol/packets/ComQueryPacket.js:7:ComQueryPacket.prototype.write = function(writer) {
node_modules/mysql/lib/protocol/packets/ComQueryPacket.js:8:  writer.writeUnsignedNumber(1, this.command);
node_modules/mysql/lib/protocol/packets/ComQueryPacket.js:9:  writer.writeString(this.sql);
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:84:  this.writecb = null;
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:85:  this.writechunk = null;
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:92:  var cb = ts.writecb;
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:97:  ts.writechunk = null;
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:98:  ts.writecb = null;
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:164:  ts.writecb = cb;
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:165:  ts.writechunk = chunk;
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:166:  ts.writeencoding = encoding;
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:182:  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {
node_modules/mysql/node_modules/readable-stream/lib/_stream_transform.js:184:    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:119:  this.writecb = null;
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:122:  this.writelen = 0;
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:190:Writable.prototype.write = function(chunk, encoding, cb) {
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:272:  state.writelen = len;
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:273:  state.writecb = cb;
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:300:  state.writecb = null;
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:301:  state.length -= state.writelen;
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:302:  state.writelen = 0;
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:308:  var cb = state.writecb;
node_modules/mysql/node_modules/readable-stream/lib/_stream_writable.js:426:    this.write(chunk, encoding);
node_modules/mysql/node_modules/readable-stream/lib/_stream_readable.js:149:// similar to how Writable.write() returns true if you should
node_modules/mysql/node_modules/readable-stream/lib/_stream_readable.js:188:        chunk = state.decoder.write(chunk);
node_modules/mysql/node_modules/readable-stream/lib/_stream_readable.js:572:    var ret = dest.write(chunk);
node_modules/mysql/node_modules/readable-stream/lib/_stream_readable.js:808:      chunk = state.decoder.write(chunk);
node_modules/mysql/node_modules/readable-stream/float.patch:518:-TestWriter.prototype.write = function(c) {
node_modules/mysql/node_modules/readable-stream/float.patch:577:-  res.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/mysql/node_modules/readable-stream/node_modules/string_decoder/index.js:67:      this.write = passThroughWrite;
node_modules/mysql/node_modules/readable-stream/node_modules/string_decoder/index.js:90:StringDecoder.prototype.write = function(buffer) {
node_modules/mysql/node_modules/readable-stream/node_modules/string_decoder/index.js:197:    res = this.write(buffer);
node_modules/mysql/node_modules/readable-stream/node_modules/core-util-is/float.patch:532:-    process.stdout.write(String(arguments[i]));
node_modules/mysql/node_modules/readable-stream/node_modules/core-util-is/float.patch:539:-    process.stdout.write(arguments[i] + '\n');
node_modules/mysql/node_modules/readable-stream/node_modules/core-util-is/float.patch:545:-  process.stderr.write('DEBUG: ' + x + '\n');
node_modules/mysql/node_modules/readable-stream/node_modules/core-util-is/float.patch:551:-    process.stderr.write(arguments[i] + '\n');
node_modules/mysql/node_modules/readable-stream/node_modules/core-util-is/float.patch:567:-    if (writeStream.write(chunk) === false) readStream.pause();
node_modules/formidable/lib/multipart_parser.js:61:  this.boundary.write('\r\n--', 'ascii', 0);
node_modules/formidable/lib/multipart_parser.js:62:  this.boundary.write(str, 'ascii', 4);
node_modules/formidable/lib/multipart_parser.js:72:MultipartParser.prototype.write = function(buffer) {
node_modules/formidable/lib/querystring_parser.js:13:QuerystringParser.prototype.write = function(buffer) {
node_modules/formidable/lib/octet_parser.js:13:OctetParser.prototype.write = function(buffer) {
node_modules/formidable/lib/json_parser.js:15:JSONParser.prototype.write = function(buffer) {
node_modules/formidable/lib/incoming_form.js:110:  this.writeHeaders(req.headers);
node_modules/formidable/lib/incoming_form.js:123:      self.write(buffer);
node_modules/formidable/lib/incoming_form.js:139:IncomingForm.prototype.writeHeaders = function(headers) {
node_modules/formidable/lib/incoming_form.js:145:IncomingForm.prototype.write = function(buffer) {
node_modules/formidable/lib/incoming_form.js:157:  var bytesParsed = this._parser.write(buffer);
node_modules/formidable/lib/incoming_form.js:193:      value += decoder.write(buffer);
node_modules/formidable/lib/incoming_form.js:221:    file.write(buffer, function() {
node_modules/formidable/lib/incoming_form.js:480:    file.write(buffer, function() {
node_modules/formidable/lib/file.js:50:File.prototype.write = function(buffer, cb) {
node_modules/formidable/lib/file.js:55:  this._writeStream.write(buffer, function() {
node_modules/formidable/Readme.md:54:      res.writeHead(200, {'content-type': 'text/plain'});
node_modules/formidable/Readme.md:55:      res.write('received upload:\n\n');
node_modules/formidable/Readme.md:63:  res.writeHead(200, {'content-type': 'text/html'});
node_modules/sesh/userDemo.js:12:    response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/userDemo.js:13:    response.write('You\'ve been logged out');
node_modules/sesh/userDemo.js:28:    response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/userDemo.js:29:    response.write('Hello, you are the Guest user');
node_modules/sesh/userDemo.js:33:    response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/userDemo.js:34:    response.write('Hello, you are ' + request.session.data.user);
node_modules/sesh/node_modules/response/node_modules/stream-browserify/test/buf.js:26:    writable.write(buf);
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:84:  this.writecb = null;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:85:  this.writechunk = null;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:92:  var cb = ts.writecb;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:97:  ts.writechunk = null;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:98:  ts.writecb = null;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:164:  ts.writecb = cb;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:165:  ts.writechunk = chunk;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:166:  ts.writeencoding = encoding;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:182:  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js:184:    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:110:  this.writecb = null;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:113:  this.writelen = 0;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:174:Writable.prototype.write = function(chunk, encoding, cb) {
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:233:  state.writelen = len;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:234:  state.writecb = cb;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:255:  state.writecb = null;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:256:  state.length -= state.writelen;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:257:  state.writelen = 0;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:263:  var cb = state.writecb;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js:352:    this.write(chunk, encoding);
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js:136:// similar to how Writable.write() returns true if you should
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js:175:        chunk = state.decoder.write(chunk);
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js:623:    var written = dest.write(chunk);
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js:834:      chunk = state.decoder.write(chunk);
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/node_modules/string_decoder/index.js:67:      this.write = passThroughWrite;
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/node_modules/string_decoder/index.js:90:StringDecoder.prototype.write = function(buffer) {
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/node_modules/string_decoder/index.js:197:    res = this.write(buffer);
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/node_modules/core-util-is/float.patch:532:-    process.stdout.write(String(arguments[i]));
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/node_modules/core-util-is/float.patch:539:-    process.stdout.write(arguments[i] + '\n');
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/node_modules/core-util-is/float.patch:545:-  process.stderr.write('DEBUG: ' + x + '\n');
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/node_modules/core-util-is/float.patch:551:-    process.stderr.write(arguments[i] + '\n');
node_modules/sesh/node_modules/response/node_modules/stream-browserify/node_modules/readable-stream/node_modules/core-util-is/float.patch:567:-    if (writeStream.write(chunk) === false) readStream.pause();
node_modules/sesh/node_modules/response/node_modules/stream-browserify/index.js:51:      if (false === dest.write(chunk) && source.pause) {
node_modules/sesh/node_modules/response/node_modules/mime/types/mime.types:900:application/vnd.stardivision.writer		sdw vor
node_modules/sesh/node_modules/response/node_modules/mime/types/mime.types:901:application/vnd.stardivision.writer-global	sgl
node_modules/sesh/node_modules/response/node_modules/mime/types/mime.types:912:application/vnd.sun.xml.writer			sxw
node_modules/sesh/node_modules/response/node_modules/mime/types/mime.types:913:application/vnd.sun.xml.writer.global		sxg
node_modules/sesh/node_modules/response/node_modules/mime/types/mime.types:914:application/vnd.sun.xml.writer.template		stw
node_modules/sesh/node_modules/response/node_modules/bl/test/basic-test.js:290:  fs.writeFileSync('/tmp/bl_test_rnd.dat', random)
node_modules/sesh/node_modules/response/node_modules/bl/test/basic-test.js:338:  bl.write(inp1)
node_modules/sesh/node_modules/response/node_modules/bl/test/basic-test.js:339:  bl.write(' and ')
node_modules/sesh/node_modules/response/node_modules/bl/test/basic-test.js:340:  bl.write(inp2)
node_modules/sesh/node_modules/response/node_modules/bl/test/basic-test.js:349:  source.write('hello')
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:84:  this.writecb = null;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:85:  this.writechunk = null;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:92:  var cb = ts.writecb;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:97:  ts.writechunk = null;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:98:  ts.writecb = null;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:164:  ts.writecb = cb;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:165:  ts.writechunk = chunk;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:166:  ts.writeencoding = encoding;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:182:  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js:184:    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:110:  this.writecb = null;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:113:  this.writelen = 0;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:174:Writable.prototype.write = function(chunk, encoding, cb) {
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:233:  state.writelen = len;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:234:  state.writecb = cb;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:255:  state.writecb = null;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:256:  state.length -= state.writelen;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:257:  state.writelen = 0;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:263:  var cb = state.writecb;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js:352:    this.write(chunk, encoding);
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_readable.js:136:// similar to how Writable.write() returns true if you should
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_readable.js:175:        chunk = state.decoder.write(chunk);
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_readable.js:623:    var written = dest.write(chunk);
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/lib/_stream_readable.js:834:      chunk = state.decoder.write(chunk);
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/node_modules/string_decoder/index.js:67:      this.write = passThroughWrite;
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/node_modules/string_decoder/index.js:90:StringDecoder.prototype.write = function(buffer) {
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/node_modules/string_decoder/index.js:197:    res = this.write(buffer);
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/node_modules/core-util-is/float.patch:532:-    process.stdout.write(String(arguments[i]));
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/node_modules/core-util-is/float.patch:539:-    process.stdout.write(arguments[i] + '\n');
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/node_modules/core-util-is/float.patch:545:-  process.stderr.write('DEBUG: ' + x + '\n');
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/node_modules/core-util-is/float.patch:551:-    process.stderr.write(arguments[i] + '\n');
node_modules/sesh/node_modules/response/node_modules/bl/node_modules/readable-stream/node_modules/core-util-is/float.patch:567:-    if (writeStream.write(chunk) === false) readStream.pause();
node_modules/sesh/node_modules/response/index.js:19:      dest.write('Not Found')
node_modules/sesh/node_modules/response/index.js:123:  if (data) this.write(data)
node_modules/sesh/node_modules/response/index.js:128:        self.compressor.write(data)
node_modules/sesh/node_modules/response/index.js:131:          dest.write(data)
node_modules/sesh/demo.js:11:    response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/demo.js:12:    response.write('hello, i know nodejitsu. \n' + 'the current session for this request looks like: \n' + JSON.stringify(request.session, 2, true));
node_modules/sesh/magicDemo.js:9:  response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/magicDemo.js:10:  response.write('hello, i know nodejitsu. \n' + 'the current session for this request looks like: \n' + JSON.stringify(request.session, 2, true));
node_modules/sesh/README.md:49:          response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/README.md:50:          response.write('request.session: \n' + JSON.stringify(request.session, 2, true));
node_modules/sesh/README.md:72:      response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/README.md:73:      response.write('request.session: \n' + JSON.stringify(request.session, 2, true));
node_modules/sesh/README.md:96:        response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/README.md:97:        response.write('You\'ve been logged out');
node_modules/sesh/README.md:112:        response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/README.md:113:        response.write('Hello, you are the Guest user');
node_modules/sesh/README.md:117:        response.writeHead(200, {'Content-Type': 'text/plain'});
node_modules/sesh/README.md:118:        response.write('Hello, you are ' + request.session.data.user);
requestHandlers.js:37:			response.writeHead(200, {"Content-Type": "text/html"});
requestHandlers.js:40:				response.write('COULD NOT LOAD PAGE');
requestHandlers.js:42:				response.write(msg);
requestHandlers.js:47:		response.writeHead(200, {"Content-Type": "text/plain"});
requestHandlers.js:48:		response.write("Could not get index page!");
requestHandlers.js:76:		response.writeHead(200, {'Content-Type': 'text/html'});
requestHandlers.js:80:				response.write('COULD NOT LOAD PAGE');
requestHandlers.js:82:				response.write(msg);
requestHandlers.js:87:		response.writeHead(200, {"Content-Type": "text/plain"});
requestHandlers.js:88:		response.write("Could not get index page!");
requestHandlers.js:111:				response.writeHead(200, {'Content-Type': 'text/plain'});
requestHandlers.js:112:				response.write('Registration failed - check log');
requestHandlers.js:117:				response.writeHead(200, {'Content-Type': 'text/html'});
requestHandlers.js:118:				response.write('<html><body><span>Registration success! Click <a href="/">here</a> to return to site</span></body></html>');
requestHandlers.js:131:			response.writeHead(200, {'Content-Type': 'text/plain'});
requestHandlers.js:132:			response.write("Login function invoked - but it failed due to error... :(");
requestHandlers.js:155:		response.writeHead(302, {'Location': '/index'});
requestHandlers.js:166:		response.writeHead(302, {'Location': '/'});
requestHandlers.js:198:			response.writeHead(200, {'Content-Type': 'text/html'});
requestHandlers.js:199:			response.write(pageText);
requestHandlers.js:201:			response.writeHead(200, {'Content-Type': 'text/plain'});
requestHandlers.js:202:			response.write('Could not write registration page - please check log');
requestHandlers.js:206:		response.writeHead(200, {'Content-Type': 'text/plain'});
requestHandlers.js:207:		response.write('Did not receive registration page object - please check log');
requestHandlers.js:219:			response.writeHead(200, {'Content-Type': 'text/plain'});
requestHandlers.js:220:			response.write('Could not generate competition page - ' + err);
requestHandlers.js:225:					response.writeHead(200, {'Content-Type': 'text/plain'});
requestHandlers.js:226:					response.write('Could not render competition page - ' + err);
requestHandlers.js:229:					response.writeHead(200, {'Content-Type': 'text/html'});
requestHandlers.js:230:					response.write(contents);
requestHandlers.js:241:	response.writeHead(302, {'Location': '/index'});
router.js:45:					response.writeHead(200, {"Content-Type": type});
router.js:46:					response.write(loadedData);
router.js:68:						response.writeHead(404, {"Content-Type": "text/plain"});
router.js:69:						response.write("404 not found!");
